{"version":3,"sources":["component/List.js","action/Action.js","component/Show.js","action/delll.js","App.js","reducer/allred.js","reducer/reducer.js","index.js"],"names":["List","Act","useDispatch","useState","data","setdata","desc","setdesc","dat","setdat","star","useSelector","x","Update","id","style","border","onChange","event","target","value","type","class","onClick","payload","console","log","Show","first","a","dispatch","Date","currentDate","d","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","st","replace","map","item","index","color","ind","src","App","className","display","justifyContent","fontFamily","Allred","combineReducers","state","action","c","filter","i","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e69b4e91.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport {First} from '../action/Action'\r\nimport { useState } from 'react'\r\nimport './style.css'\r\n\r\n\r\n\r\nexport const List = () => {\r\nconst Act =useDispatch()\r\nconst[data,  setdata] = useState(\"\")\r\nconst[desc,  setdesc] = useState(\"\")\r\nconst[dat,  setdat] = useState(\"\")\r\n\r\nconst star = useSelector(x=>x.Update)\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div id='list'  style={{border:'solid black 1px'} }>\r\n       \r\n        <div id='txt' >TITLE</div>\r\n       <div> <input onChange={(event)=>{setdata (event.target.value)} }></input></div>\r\n       <div id='txt'>DESCRIPTION</div>\r\n       <div> <input onChange={(event)=>{setdesc (event.target.value)} }></input></div>\r\n       <div  id='txt'>DATE</div>\r\n       <div><input type= 'Date' onChange={(event)=>{setdat (event.target.value)} } ></input></div>\r\n       <button id='listbtn' type=\"button\" class=\"btn btn-info\" onClick={()=>{Act(First({  data ,desc ,dat }))} } >ADD</button>\r\n       {console.log(star)}\r\n\r\n            \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const First = (x) => {\r\n    return{\r\n        type:\"change\",\r\n        payload : x ,\r\n        \r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { delll } from '../action/delll'\r\n\r\n\r\nexport const Show = () => {\r\n  const first = useSelector(a => a.Update)\r\n\r\n  const dispatch = useDispatch()\r\n  let current_date = new Date();\r\n  function formatDate() {\r\n\r\n    var d = new Date(),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  }\r\n\r\n  let currentDate = formatDate(current_date);\r\n  console.log(currentDate);\r\n  const st = currentDate.replace(/-/g, \"\");\r\n  console.log(st);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {first.map((item, index) => {\r\n        return <div  style={{ border: 'solid black 1px' }} id='show' > <p>{item.data}</p><p>{item.desc}</p><p>{item.dat}</p>\r\n          {item.dat.replace(/-/g, \"\") === st ? (<p>DUE DATE IS TODAY</p>) : item.dat.replace(/-/g, \"\") <= st ? (<p style={{ color: \"red\" }} >DUE DATE PASSED{item.dat} </p>) : (<p>DUE DATE {item.dat}</p>)}\r\n          <button class=\"bg-success p-2 text-dark bg-opacity-25\" onClick={ () => (dispatch(delll({ ind: index })))}  ><img src='https://icons.veryicon.com/png/o/construction-tools/coca-design/delete-189.png'></img></button>\r\n        </div>\r\n      })}\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","\r\n\r\nexport const delll = (y ) => {\r\n    return{\r\n        type:\"ckk\",\r\n        payload : y ,\r\n        \r\n    }\r\n}\r\n","\r\nimport {List} from './component/List'\r\nimport {Show} from './component/Show'\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div  className=\"App\">\r\n     <h1 style={{display:'flex',justifyContent:'center',fontFamily:\"italic\" ,}} >TODO APP</h1>\r\n    <div >\r\n  <div class=\"row\">\r\n    <div  class=\"col\">\r\n      <List/>\r\n    </div>\r\n    <div class=\"col\">\r\n    <Show/>\r\n    </div>\r\n  </div></div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {Update} from './reducer'\r\n\r\n\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\nconst Allred = combineReducers({Update})\r\n\r\nexport default Allred ;","\r\n\r\nexport const Update = (state = [], action) => {\r\n   switch (action.type){\r\n       case \"change\" :\r\n       return state = [...state , action.payload] ;\r\n\r\n       case \"ckk\" :\r\n        let c =state.filter((item , i)=>{return (i !== action.payload.ind)})\r\n        state.value = c \r\n        return state = c\r\n\r\n       default :\r\n       return state\r\n   }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport Allred from './reducer/allred'\r\nimport { Provider } from 'react-redux';\r\n const store = createStore(Allred)\r\n\r\n\r\nReactDOM.render(\r\n <Provider store={store}><App/></Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}